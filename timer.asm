
;
; https://github.com/sage-etcher/i8080timer.git
;

;
;  Copyright 2024 Sage I. Hendricks  
;
;  Licensed under the Apache License, Version 2.0 (the "License");  
;  you may not use this file except in compliance with the License.  
;  You may obtain a copy of the License at  
;
;      http://www.apache.org/licenses/LICENSE-2.0>
;
;  Unless required by applicable law or agreed to in writing, software  
;  distributed under the License is distributed on an "AS IS" BASIS,  
;  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
;  See the License for the specific language governing permissions and  
;  limitations under the License.  
; 

 
	ORG	00100H
START:	
	;DO STUFF

	;WAIT A TOTAL OF 1 SECOND
	MVI	C,250		;LOAD 250 MILLISECONDS AS PARAM
	CALL	SLEEP$M		;SLEEP FOR 250 MILLISECONDS
	CALL	SLEEP$M		;SLEEP FOR 250 MILLISECONDS MORE
	CALL	SLEEP$M		;SLEEP FOR 250 MILLISECONDS MORE
	CALL	SLEEP$M		;SLEEP FOR 250 MILLISECONDS MORE
	; CYCLES:
	; MVI		= 7
	; CALL x4	= (17 + 1,000,022) * 4
	;
	; WILL HAVE SLEPT FOR 4,000,163 CYCLES 
	; OTHERWISE KNOWN AS 1 SECONDS AND 40.75 MICRO SECONDS

	;DO MORE STUFF

HALT:	HLT			;HALT THE SYSTEM
	JMP	HALT		;IF HALT IS BYPASSED, LOOP AND HALT AGAIN.



;PROCEDURES ASSUME THE SYSTME IS RUNNING A 4MHZ Z80A CPU

;SLEEP FOR ATLEAST REG C (0-255) MILLISECONDS
;ALWAYS TAKES 22 CYCLES (5.5 MICRO SECONDS) LONGER THAN GIVEN VALUE
;ABOVE IS *NOT* ACOUNTING FOR CALL AND MVI TO ENTER THE PROCEDURE
SLEEP$M:
	;INIT TAKES 7 CYCLES
	;LOOP ITERATION TAKES 61+3929(SLEEP$M$STEP4)
	;LAST LOOP ITERATION TAKES 15

	MVI	A,0		;INITIALZE THE ITERATOR TO 0

	;FALL-THROUGH
SM$LOOP:
	CMP	C		;CHECK IF THE TWO VALUES ARE EQUAL
	RZ			;IF THEY ARE, STOP SLEEPING

				;DONT PUSH/POP, MEMORY SPEED IS UNRELIABLE
				;AND TIMINGS ARE VVV SENSITIVE
	MOV	D,C		;STORE MAX VALUE IN REG D TEMPORARILY
	MOV	E,A		;STORE ITERATOR VALUE IN REG E TEMPORARILY

	CALL	SLEEP$M$STEP4	;SLEEP FOR ROUGHLY 1 MS (BIT UNDER)

	MOV	A,E		;RESTORE ITERATOR TO REG ACC
	MOV	C,D		;RESTORE MAX VALUE TO REG C

	INR	A		;INCREMENT TO NEXT VALUE
	JMP	SM$LOOP		;LOOP FOR NEXT 1MS WAIT
;HELPER PROCEDURE FOR SLEEP$M, SLEEPS FOR ROUGHLY 1 MS (BIT UNDER)
;CPU TIME 3939 CYCLES
SLEEP$M$STEP4:
	;INIT TAKES 24 CYCLES
	;LOOP ITERATION TAKES 50 
	;LAST LOOP ITERATION TAKES 15

	MVI	A,0		;USE REG ACC AS AN ITERATOR
	MVI	C,78		;USE REG C AS THE MAX VALUE

	;TRASH NOP INSTRUCTIONS FOR TIMING (10 CYCLES)
	MOV	A,A		;5
	MOV	A,A		;5

	;FALL-THROUGH
SM$S4$LOOP:
	CMP	C		;CHECK REG ACC AND REG C
	RZ			;IF THE TWO ARE EQUAL, STOP LOOPING

	;TRASH NOP INSTRUCTIONS FOR TIMING (26 CYCLES)
	MOV	A,A		;5
	MOV	A,A		;5
	NOP			;4
	NOP			;4
	NOP			;4
	NOP			;4

	INR	A		;MOVE A TO NEXT VALUE
	JMP	SM$S4$LOOP	;AND LOOP BACK TO THE TOP
	
